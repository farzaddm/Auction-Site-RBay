-- Drop Tables
DROP TABLE IF EXISTS Chats, Likes, Views, Follows, Bids, Items, Users;

-- Create Users Table
CREATE TABLE Users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    pic VARCHAR(255),
    date_of_birth DATE,
    job VARCHAR(255),
    education VARCHAR(255),
    location VARCHAR(255),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Create Items Table
CREATE TABLE Items (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId INT NOT NULL,
  name VARCHAR(255) NOT NULL,
  description TEXT NOT NULL,
  price DECIMAL(10, 2) DEFAULT 0.0,
  pic VARCHAR(255),
  views INT DEFAULT 0,
  likes INT DEFAULT 0,
  duration INT NOT NULL,
  category VARCHAR(255) CHECK (category IN ('decorative', 'furniture', 'electronics', 'clothing', 'books', 'toys', 'sports')) NOT NULL,
  hotness BOOLEAN DEFAULT FALSE,
  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES Users(id) ON DELETE CASCADE
);

-- Create Bids Table
CREATE TABLE Bids (
  id INT AUTO_INCREMENT PRIMARY KEY,
  price DECIMAL(10, 2) NOT NULL,
  userId INT NOT NULL,
  itemId INT NOT NULL,
  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES Users(id),
  FOREIGN KEY (itemId) REFERENCES Items(id)
);

-- Create Chats Table
CREATE TABLE Chats (
  id INT AUTO_INCREMENT PRIMARY KEY,
  message TEXT NOT NULL,
  userId INT NOT NULL,
  itemId INT NOT NULL,
  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES Users(id),
  FOREIGN KEY (itemId) REFERENCES Items(id)
);

-- Create Likes Table
CREATE TABLE Likes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId INT NOT NULL,
  itemId INT NOT NULL,
  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT unique_like UNIQUE (userId, itemId),
  FOREIGN KEY (userId) REFERENCES Users(id),
  FOREIGN KEY (itemId) REFERENCES Items(id)
);

-- Create Views Table
CREATE TABLE Views (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId INT NOT NULL,
  itemId INT NOT NULL,
  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT unique_view UNIQUE (userId, itemId),
  FOREIGN KEY (userId) REFERENCES Users(id),
  FOREIGN KEY (itemId) REFERENCES Items(id)
);

-- Create Follows Table
CREATE TABLE Follows (
  id INT AUTO_INCREMENT PRIMARY KEY,
  followerId INT NOT NULL,
  followingId INT NOT NULL,
  createdAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (followerId) REFERENCES Users(id),
  FOREIGN KEY (followingId) REFERENCES Users(id)
);
